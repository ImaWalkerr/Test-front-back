# Generated by Django 3.2.6 on 2021-08-19 17:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_products', models.PositiveIntegerField(default=0)),
                ('final_price', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='Общая цена')),
            ],
            options={
                'verbose_name': 'Корзина',
                'verbose_name_plural': 'Корзины',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Имя категории')),
                ('slug', models.SlugField(unique=True)),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='Notebook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Наименование')),
                ('slug', models.SlugField(unique=True)),
                ('image', models.ImageField(upload_to='web_media/products/', verbose_name='Изображение товара')),
                ('description', models.TextField(max_length=5000, null=True, verbose_name='Описание')),
                ('price', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='Цена')),
                ('number_of_cores_cpu', models.IntegerField(default=0, verbose_name='Количество ядер процессора')),
                ('number_of_threads_cpu', models.IntegerField(default=0, verbose_name='Количество потоков процессора')),
                ('clock_frequency_cpu', models.IntegerField(default=0, verbose_name='Тактовая частота процессора')),
                ('turbo_frequency_cpu', models.IntegerField(default=0, verbose_name='Турбо частота процессора')),
                ('cpu_power_consumption', models.IntegerField(default=0, verbose_name='Энергопотребление процессора')),
                ('width', models.IntegerField(default=0, verbose_name='Ширина')),
                ('depth', models.IntegerField(default=0, verbose_name='Глубина')),
                ('thickness', models.FloatField(default=0, verbose_name='Толщина')),
                ('weight', models.IntegerField(default=0, verbose_name='Вес')),
                ('screen_diagonal', models.FloatField(default=0, verbose_name='Диагональ дисплея')),
                ('screen_resolution', models.IntegerField(default=0, verbose_name='Диагональ дисплея')),
                ('matrix_frequency', models.IntegerField(default=0, verbose_name='Частота матрицы')),
                ('ram_frequency', models.IntegerField(default=0, verbose_name='Частота оперативной памяти')),
                ('ram_memory', models.IntegerField(default=0, verbose_name='Кол-во оперативной памяти')),
                ('max_ram_memory', models.IntegerField(default=0, verbose_name='Максимальное кол-во оперативной памяти')),
                ('free_memory_slots', models.IntegerField(default=0, verbose_name='Свободных слотов памяти')),
                ('configuration_drive_type', models.IntegerField(default=0, verbose_name='Конфигурация накопителя')),
                ('drive_capacity', models.IntegerField(default=0, verbose_name='Ёмкость накопителя')),
                ('number_of_ssd_slots', models.IntegerField(default=0, verbose_name='Кол-во слотов для SSD')),
                ('discrete_graphics', models.ImageField(upload_to='web_media/tab_icons/', verbose_name='Дискретная видеокарта')),
                ('local_video_memory', models.IntegerField(default=0, verbose_name='Локальная видеопамять')),
                ('graphics_card_feature', models.IntegerField(default=0, verbose_name='Характеристики видеокарты')),
                ('camera', models.ImageField(upload_to='web_media/tab_icons/', verbose_name='Камера')),
                ('built_in_microphone', models.IntegerField(default=0, verbose_name='Встроенный микрофон')),
                ('built_in_speakers', models.IntegerField(default=0, verbose_name='Встроенные динамики')),
                ('multimedia_touchpad', models.ImageField(upload_to='web_media/tab_icons/', verbose_name='Мультимедийная сенсорная панель')),
                ('bluetooth', models.FloatField(default=0, verbose_name='Bluetooth')),
                ('lan', models.IntegerField(default=0, verbose_name='LAN')),
                ('wifi', models.FloatField(default=0, verbose_name='Wi-Fi')),
                ('total_usb_type_a', models.IntegerField(default=0, verbose_name='Всего USB Type A')),
                ('total_usb_2', models.IntegerField(default=0, verbose_name='Всего USB 2.0')),
                ('total_usb_type_c', models.IntegerField(default=0, verbose_name='Всего USB Type C')),
                ('usb_4', models.IntegerField(default=0, verbose_name='USB4')),
                ('vga', models.IntegerField(default=0, verbose_name='VGA')),
                ('hdmi', models.IntegerField(default=0, verbose_name='HDMI')),
                ('mini_display_port', models.IntegerField(default=0, verbose_name='Mini display port')),
                ('audio_outputs', models.IntegerField(default=0, verbose_name='Аудио выходы(3.5мм jack)')),
                ('charge_via_usb_type_c', models.ImageField(upload_to='web_media/tab_icons/', verbose_name='Зарядка ноутбука через USB Type C')),
                ('usb_c_power_adapter', models.ImageField(upload_to='web_media/tab_icons/', verbose_name='Адаптер питания USB Type C')),
                ('fast_charging', models.ImageField(upload_to='web_media/tab_icons/', verbose_name='Быстрая зарядка')),
                ('energy_reserve', models.IntegerField(default=0, verbose_name='Запас энергии')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Storeapp.category', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Ноутбук',
                'verbose_name_plural': 'Ноутбуки',
            },
        ),
        migrations.CreateModel(
            name='Smartphone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Наименование')),
                ('slug', models.SlugField(unique=True)),
                ('image', models.ImageField(upload_to='web_media/products/', verbose_name='Изображение товара')),
                ('description', models.TextField(max_length=5000, null=True, verbose_name='Описание')),
                ('price', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='Цена')),
                ('screen_size', models.FloatField(default=0, verbose_name='Размер экрана')),
                ('screen_resolution_mobile', models.IntegerField(default=0, verbose_name='Разрешение экрана')),
                ('ram_mobile', models.IntegerField(default=0, verbose_name='Оперативная память')),
                ('flash_memory', models.IntegerField(default=0, verbose_name='Флэш-память')),
                ('built_in_camera', models.ImageField(upload_to='web_media/tab_icons/', verbose_name='Встроенная камера')),
                ('num_of_main_cam', models.IntegerField(default=0, verbose_name='Кол-во основных камер')),
                ('num_of_matrix_points', models.IntegerField(default=0, verbose_name='Кол-во точек матрицы')),
                ('num_of_sim_cards', models.IntegerField(default=0, verbose_name='Кол-во SIM-карт')),
                ('max_video_resolution', models.IntegerField(default=0, verbose_name='Максимальное разрешение видео')),
                ('cpu_clock_speed', models.IntegerField(default=0, verbose_name='Тактовая частота процессора')),
                ('num_of_cores', models.IntegerField(default=0, verbose_name='Кол-во ядер')),
                ('cpu_size', models.IntegerField(default=0, verbose_name='Разрядность процессора')),
                ('technical_process', models.IntegerField(default=0, verbose_name='Техпроцесс')),
                ('gpu_frequency', models.IntegerField(default=0, verbose_name='Частота ГПУ')),
                ('replaceable_panels', models.ImageField(upload_to='web_media/tab_icons/', verbose_name='Съёмные панели')),
                ('shockproof_housing', models.ImageField(upload_to='web_media/tab_icons/', verbose_name='Ударопрочный корпус')),
                ('dust_moisture_protection', models.ImageField(upload_to='web_media/tab_icons/', verbose_name='Пыле-влагозащита')),
                ('physical_qwerty_keyboard', models.ImageField(upload_to='web_media/tab_icons/', verbose_name='Физическая QWERTY-клавиатура')),
                ('length', models.FloatField(default=0, verbose_name='Длина')),
                ('width', models.FloatField(default=0, verbose_name='Ширина')),
                ('thickness', models.FloatField(default=0, verbose_name='Толщина')),
                ('num_of_screen_colors', models.IntegerField(default=0, verbose_name='Кол-во цветов экрана')),
                ('screen_res', models.IntegerField(default=0, verbose_name='Разрешающая способность экрана')),
                ('refresh_rate', models.IntegerField(default=0, verbose_name='Частота обновления экрана')),
                ('touch_screen', models.ImageField(upload_to='web_media/tab_icons/', verbose_name='Сенсорный экран')),
                ('built_in_flash', models.ImageField(upload_to='web_media/tab_icons/', verbose_name='Встроенная вспышка')),
                ('auto_focus', models.ImageField(upload_to='web_media/tab_icons/', verbose_name='Автоматическая фокусировка')),
                ('optical_stabilization', models.ImageField(upload_to='web_media/tab_icons/', verbose_name='Оптическая стабилизация')),
                ('max_frames_per_second', models.IntegerField(default=0, verbose_name='Максимальное во-во кадров в секунду')),
                ('front_camera', models.IntegerField(default=0, verbose_name='Фронтальная камера')),
                ('dual_camera', models.ImageField(upload_to='web_media/tab_icons/', verbose_name='Двойная камера')),
                ('diaphragm', models.ImageField(upload_to='web_media/tab_icons/', verbose_name='Диафрагма')),
                ('led_indicator', models.ImageField(upload_to='web_media/tab_icons/', verbose_name='Светодиодный индикатор')),
                ('stereo_speakers', models.ImageField(upload_to='web_media/tab_icons/', verbose_name='Стереодинамики')),
                ('fingerprint_scanner', models.ImageField(upload_to='web_media/tab_icons/', verbose_name='Сканер отпечатка пальца')),
                ('face_or_iris_map_scanner', models.ImageField(upload_to='web_media/tab_icons/', verbose_name='Сканер карты лица или радужки глаза')),
                ('face_unlock', models.ImageField(upload_to='web_media/tab_icons/', verbose_name='Разблоктровка по лицу')),
                ('registering_the_force_of_pressing', models.ImageField(upload_to='web_media/tab_icons/', verbose_name='Регистрация силы нажатий')),
                ('heart_rate_monitor', models.ImageField(upload_to='web_media/tab_icons/', verbose_name='Монитор сердечного ритма')),
                ('work_with_gloves', models.ImageField(upload_to='web_media/tab_icons/', verbose_name='Работа в перчатках')),
                ('ir_transmitter', models.ImageField(upload_to='web_media/tab_icons/', verbose_name='ИК-передатчик')),
                ('fm_receiver', models.ImageField(upload_to='web_media/tab_icons/', verbose_name='FM-приемник')),
                ('wireless_charging', models.ImageField(upload_to='web_media/tab_icons/', verbose_name='Беспроводная зарядка')),
                ('fast_charging', models.ImageField(upload_to='web_media/tab_icons/', verbose_name='Быстрая зарядка')),
                ('accelerometer', models.ImageField(upload_to='web_media/tab_icons/', verbose_name='Акселерометр')),
                ('gyroscope', models.ImageField(upload_to='web_media/tab_icons/', verbose_name='Гидроскоп')),
                ('light_sensor', models.ImageField(upload_to='web_media/tab_icons/', verbose_name='Датчик освещенности')),
                ('barometer', models.ImageField(upload_to='web_media/tab_icons/', verbose_name='Барометр')),
                ('ant', models.ImageField(upload_to='web_media/tab_icons/', verbose_name='ANT+')),
                ('gps', models.ImageField(upload_to='web_media/tab_icons/', verbose_name='GPS')),
                ('glonass', models.ImageField(upload_to='web_media/tab_icons/', verbose_name='GLONASS')),
                ('beidou', models.ImageField(upload_to='web_media/tab_icons/', verbose_name='Beidou')),
                ('edge', models.ImageField(upload_to='web_media/tab_icons/', verbose_name='Передача данных EDGE')),
                ('hspa', models.ImageField(upload_to='web_media/tab_icons/', verbose_name='HSPA')),
                ('hspa_plus', models.ImageField(upload_to='web_media/tab_icons/', verbose_name='HSPA+')),
                ('lte', models.ImageField(upload_to='web_media/tab_icons/', verbose_name='LTE')),
                ('five_g', models.ImageField(upload_to='web_media/tab_icons/', verbose_name='5G')),
                ('hdmi', models.ImageField(upload_to='web_media/tab_icons/', verbose_name='HDMI-выход')),
                ('nfs', models.ImageField(upload_to='web_media/tab_icons/', verbose_name='NFS')),
                ('battery_capacity', models.IntegerField(default=0, verbose_name='Ёмкость аккумулятора')),
                ('non_removable', models.ImageField(upload_to='web_media/tab_icons/', verbose_name='Несъемный аккумулятор')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Storeapp.category', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Смартфон',
                'verbose_name_plural': 'Смартфоны',
            },
        ),
        migrations.CreateModel(
            name='SmartphoneTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.CharField(max_length=255, verbose_name='Дата выхода на рынок')),
                ('mobile_operation_system', models.CharField(max_length=20, verbose_name='Операционная система')),
                ('ver_mobile_operation_system', models.CharField(max_length=20, verbose_name='Версия операционной системы')),
                ('sim_card_format', models.CharField(max_length=20, verbose_name='Формат SIM-карт')),
                ('memory_card_support', models.CharField(max_length=255, verbose_name='Поддержка карт памяти')),
                ('platform', models.CharField(max_length=50, verbose_name='Платформа')),
                ('cpu', models.CharField(max_length=255, verbose_name='Процессор')),
                ('microarchitecture_cpu', models.CharField(max_length=255, verbose_name='Микроархитектура процессора')),
                ('graphics_accelerator', models.CharField(max_length=255, verbose_name='Графический ускоритель')),
                ('screen_technology', models.CharField(max_length=20, verbose_name='Технология экрана')),
                ('body_design', models.CharField(max_length=20, verbose_name='Конструкция корпуса')),
                ('body_material', models.CharField(max_length=20, verbose_name='Материал корпуса')),
                ('body_color', models.CharField(max_length=20, verbose_name='Цвет корпуса')),
                ('front_panel_color', models.CharField(max_length=20, verbose_name='Цвет фронтальной панели')),
                ('front_camera_location', models.CharField(max_length=255, verbose_name='Расположение фронтальной камеры')),
                ('supported_frequencies_and_bands', models.CharField(max_length=255, verbose_name='Поддерживаемые частоты и полосы')),
                ('bluetooth_mobile', models.FloatField(default=0, verbose_name='Bluetooth')),
                ('audio_output_mobile', models.CharField(max_length=20, verbose_name='Аудиовыход')),
                ('wifi_mobile', models.FloatField(default=0, verbose_name='Wi-Fi')),
                ('microusb_connector', models.CharField(max_length=20, verbose_name='Разьем подключения microUSB 2.0')),
                ('battery_type', models.CharField(max_length=20, verbose_name='Тип аккумулятора')),
                ('contents_of_delivery', models.CharField(max_length=255, verbose_name='Комплект поставки')),
                ('language', models.CharField(max_length=2, verbose_name='Выбор языка')),
                ('smartphone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Storeapp.smartphone')),
            ],
            options={
                'verbose_name': 'Перевод для таблицы смартфоны',
                'verbose_name_plural': 'Переводы для таблицы смартфоны',
            },
        ),
        migrations.CreateModel(
            name='NotebookTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.CharField(max_length=255, verbose_name='Дата выхода на рынок')),
                ('product_line', models.CharField(max_length=255, verbose_name='Продуктовая линейка')),
                ('type', models.CharField(max_length=255, verbose_name='Тип ноутбука')),
                ('platform_codename', models.CharField(max_length=255, verbose_name='Платформа(кодовое название)')),
                ('processor_model', models.CharField(max_length=255, verbose_name='Модель процессора')),
                ('cpu_graphics', models.CharField(max_length=255, verbose_name='Встроенная графика')),
                ('screen_technology', models.CharField(max_length=255, verbose_name='Технология экрана')),
                ('screen_surface', models.CharField(max_length=255, verbose_name='Поверхность экрана')),
                ('screen', models.CharField(max_length=255, verbose_name='Экран')),
                ('display_feature', models.CharField(max_length=255, verbose_name='Особенности дисплея')),
                ('ram_type', models.CharField(max_length=255, verbose_name='Тип оперативной памяти')),
                ('drive_type', models.CharField(max_length=255, verbose_name='Тип накопителя')),
                ('graphics_card_model', models.CharField(max_length=255, verbose_name='Модель видеокарты')),
                ('additional_graphics_card_feature', models.CharField(max_length=255, verbose_name='Дополнительные характеристики видеокарты')),
                ('numpad_type', models.CharField(max_length=255, verbose_name='Тип тачпада')),
                ('backlit_keyboard', models.CharField(max_length=255, verbose_name='Подсветка клавиатуры')),
                ('cursor_control', models.CharField(max_length=255, verbose_name='Управление курсором')),
                ('nfs', models.CharField(max_length=10, verbose_name='NFC')),
                ('alternative_modes_usb_type_c', models.CharField(max_length=255, verbose_name='Альтернативные режимы USB Type C')),
                ('operation_system', models.CharField(max_length=20, verbose_name='Операционная система')),
                ('additional_equipment', models.CharField(max_length=255, verbose_name='Дополнительная комплектация')),
                ('language', models.CharField(max_length=2, verbose_name='Выбор языка')),
                ('notebook', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Storeapp.notebook')),
            ],
            options={
                'verbose_name': 'Перевод для таблицы ноутбуки',
                'verbose_name_plural': 'Переводы для таблицы ноутбуки',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=20, verbose_name='Номер телефона')),
                ('address', models.CharField(max_length=255, verbose_name='Адрес')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Покупатель',
                'verbose_name_plural': 'Покупатели',
            },
        ),
        migrations.CreateModel(
            name='CartProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('final_price', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='Общая цена')),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_products', to='Storeapp.cart', verbose_name='Корзина')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Storeapp.customer', verbose_name='Покупатель')),
            ],
            options={
                'verbose_name': 'Товар в корзине',
                'verbose_name_plural': 'Товары в корзине',
            },
        ),
        migrations.AddField(
            model_name='cart',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Storeapp.customer', verbose_name='Владелец'),
        ),
        migrations.AddField(
            model_name='cart',
            name='products',
            field=models.ManyToManyField(blank=True, related_name='related_cart', to='Storeapp.CartProduct'),
        ),
    ]
